// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ups_amazon.proto

#ifndef PROTOBUF_INCLUDED_ups_5famazon_2eproto
#define PROTOBUF_INCLUDED_ups_5famazon_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "world_amazon.pb.h"
#include "world_ups.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_ups_5famazon_2eproto 

namespace protobuf_ups_5famazon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[10];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_ups_5famazon_2eproto
class AUCommand;
class AUCommandDefaultTypeInternal;
extern AUCommandDefaultTypeInternal _AUCommand_default_instance_;
class AULoadOver;
class AULoadOverDefaultTypeInternal;
extern AULoadOverDefaultTypeInternal _AULoadOver_default_instance_;
class AUQueryUpsid;
class AUQueryUpsidDefaultTypeInternal;
extern AUQueryUpsidDefaultTypeInternal _AUQueryUpsid_default_instance_;
class AURequestPickup;
class AURequestPickupDefaultTypeInternal;
extern AURequestPickupDefaultTypeInternal _AURequestPickup_default_instance_;
class Err;
class ErrDefaultTypeInternal;
extern ErrDefaultTypeInternal _Err_default_instance_;
class UAArrived;
class UAArrivedDefaultTypeInternal;
extern UAArrivedDefaultTypeInternal _UAArrived_default_instance_;
class UACommand;
class UACommandDefaultTypeInternal;
extern UACommandDefaultTypeInternal _UACommand_default_instance_;
class UADeliverOver;
class UADeliverOverDefaultTypeInternal;
extern UADeliverOverDefaultTypeInternal _UADeliverOver_default_instance_;
class UASendWorldId;
class UASendWorldIdDefaultTypeInternal;
extern UASendWorldIdDefaultTypeInternal _UASendWorldId_default_instance_;
class Warehouse;
class WarehouseDefaultTypeInternal;
extern WarehouseDefaultTypeInternal _Warehouse_default_instance_;
namespace google {
namespace protobuf {
template<> ::AUCommand* Arena::CreateMaybeMessage<::AUCommand>(Arena*);
template<> ::AULoadOver* Arena::CreateMaybeMessage<::AULoadOver>(Arena*);
template<> ::AUQueryUpsid* Arena::CreateMaybeMessage<::AUQueryUpsid>(Arena*);
template<> ::AURequestPickup* Arena::CreateMaybeMessage<::AURequestPickup>(Arena*);
template<> ::Err* Arena::CreateMaybeMessage<::Err>(Arena*);
template<> ::UAArrived* Arena::CreateMaybeMessage<::UAArrived>(Arena*);
template<> ::UACommand* Arena::CreateMaybeMessage<::UACommand>(Arena*);
template<> ::UADeliverOver* Arena::CreateMaybeMessage<::UADeliverOver>(Arena*);
template<> ::UASendWorldId* Arena::CreateMaybeMessage<::UASendWorldId>(Arena*);
template<> ::Warehouse* Arena::CreateMaybeMessage<::Warehouse>(Arena*);
}  // namespace protobuf
}  // namespace google

// ===================================================================

class UASendWorldId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UASendWorldId) */ {
 public:
  UASendWorldId();
  virtual ~UASendWorldId();

  UASendWorldId(const UASendWorldId& from);

  inline UASendWorldId& operator=(const UASendWorldId& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UASendWorldId(UASendWorldId&& from) noexcept
    : UASendWorldId() {
    *this = ::std::move(from);
  }

  inline UASendWorldId& operator=(UASendWorldId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UASendWorldId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UASendWorldId* internal_default_instance() {
    return reinterpret_cast<const UASendWorldId*>(
               &_UASendWorldId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(UASendWorldId* other);
  friend void swap(UASendWorldId& a, UASendWorldId& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UASendWorldId* New() const final {
    return CreateMaybeMessage<UASendWorldId>(NULL);
  }

  UASendWorldId* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UASendWorldId>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UASendWorldId& from);
  void MergeFrom(const UASendWorldId& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UASendWorldId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 worldid = 1;
  bool has_worldid() const;
  void clear_worldid();
  static const int kWorldidFieldNumber = 1;
  ::google::protobuf::int64 worldid() const;
  void set_worldid(::google::protobuf::int64 value);

  // required int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UASendWorldId)
 private:
  void set_has_worldid();
  void clear_has_worldid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 worldid_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AUQueryUpsid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AUQueryUpsid) */ {
 public:
  AUQueryUpsid();
  virtual ~AUQueryUpsid();

  AUQueryUpsid(const AUQueryUpsid& from);

  inline AUQueryUpsid& operator=(const AUQueryUpsid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AUQueryUpsid(AUQueryUpsid&& from) noexcept
    : AUQueryUpsid() {
    *this = ::std::move(from);
  }

  inline AUQueryUpsid& operator=(AUQueryUpsid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUQueryUpsid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AUQueryUpsid* internal_default_instance() {
    return reinterpret_cast<const AUQueryUpsid*>(
               &_AUQueryUpsid_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AUQueryUpsid* other);
  friend void swap(AUQueryUpsid& a, AUQueryUpsid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AUQueryUpsid* New() const final {
    return CreateMaybeMessage<AUQueryUpsid>(NULL);
  }

  AUQueryUpsid* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AUQueryUpsid>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AUQueryUpsid& from);
  void MergeFrom(const AUQueryUpsid& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AUQueryUpsid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 upsid = 1;
  bool has_upsid() const;
  void clear_upsid();
  static const int kUpsidFieldNumber = 1;
  ::google::protobuf::int64 upsid() const;
  void set_upsid(::google::protobuf::int64 value);

  // required int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AUQueryUpsid)
 private:
  void set_has_upsid();
  void clear_has_upsid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 upsid_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Warehouse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Warehouse) */ {
 public:
  Warehouse();
  virtual ~Warehouse();

  Warehouse(const Warehouse& from);

  inline Warehouse& operator=(const Warehouse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Warehouse(Warehouse&& from) noexcept
    : Warehouse() {
    *this = ::std::move(from);
  }

  inline Warehouse& operator=(Warehouse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Warehouse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Warehouse* internal_default_instance() {
    return reinterpret_cast<const Warehouse*>(
               &_Warehouse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Warehouse* other);
  friend void swap(Warehouse& a, Warehouse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Warehouse* New() const final {
    return CreateMaybeMessage<Warehouse>(NULL);
  }

  Warehouse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Warehouse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Warehouse& from);
  void MergeFrom(const Warehouse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Warehouse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Warehouse)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AURequestPickup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AURequestPickup) */ {
 public:
  AURequestPickup();
  virtual ~AURequestPickup();

  AURequestPickup(const AURequestPickup& from);

  inline AURequestPickup& operator=(const AURequestPickup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AURequestPickup(AURequestPickup&& from) noexcept
    : AURequestPickup() {
    *this = ::std::move(from);
  }

  inline AURequestPickup& operator=(AURequestPickup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AURequestPickup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AURequestPickup* internal_default_instance() {
    return reinterpret_cast<const AURequestPickup*>(
               &_AURequestPickup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AURequestPickup* other);
  friend void swap(AURequestPickup& a, AURequestPickup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AURequestPickup* New() const final {
    return CreateMaybeMessage<AURequestPickup>(NULL);
  }

  AURequestPickup* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AURequestPickup>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AURequestPickup& from);
  void MergeFrom(const AURequestPickup& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AURequestPickup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AProduct things = 1;
  int things_size() const;
  void clear_things();
  static const int kThingsFieldNumber = 1;
  ::AProduct* mutable_things(int index);
  ::google::protobuf::RepeatedPtrField< ::AProduct >*
      mutable_things();
  const ::AProduct& things(int index) const;
  ::AProduct* add_things();
  const ::google::protobuf::RepeatedPtrField< ::AProduct >&
      things() const;

  // required .Warehouse wareinfo = 2;
  bool has_wareinfo() const;
  void clear_wareinfo();
  static const int kWareinfoFieldNumber = 2;
  private:
  const ::Warehouse& _internal_wareinfo() const;
  public:
  const ::Warehouse& wareinfo() const;
  ::Warehouse* release_wareinfo();
  ::Warehouse* mutable_wareinfo();
  void set_allocated_wareinfo(::Warehouse* wareinfo);

  // required int64 trackingnum = 3;
  bool has_trackingnum() const;
  void clear_trackingnum();
  static const int kTrackingnumFieldNumber = 3;
  ::google::protobuf::int64 trackingnum() const;
  void set_trackingnum(::google::protobuf::int64 value);

  // optional int64 upsid = 4;
  bool has_upsid() const;
  void clear_upsid();
  static const int kUpsidFieldNumber = 4;
  ::google::protobuf::int64 upsid() const;
  void set_upsid(::google::protobuf::int64 value);

  // required int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AURequestPickup)
 private:
  void set_has_wareinfo();
  void clear_has_wareinfo();
  void set_has_trackingnum();
  void clear_has_trackingnum();
  void set_has_upsid();
  void clear_has_upsid();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AProduct > things_;
  ::Warehouse* wareinfo_;
  ::google::protobuf::int64 trackingnum_;
  ::google::protobuf::int64 upsid_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UAArrived : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UAArrived) */ {
 public:
  UAArrived();
  virtual ~UAArrived();

  UAArrived(const UAArrived& from);

  inline UAArrived& operator=(const UAArrived& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UAArrived(UAArrived&& from) noexcept
    : UAArrived() {
    *this = ::std::move(from);
  }

  inline UAArrived& operator=(UAArrived&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UAArrived& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UAArrived* internal_default_instance() {
    return reinterpret_cast<const UAArrived*>(
               &_UAArrived_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UAArrived* other);
  friend void swap(UAArrived& a, UAArrived& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UAArrived* New() const final {
    return CreateMaybeMessage<UAArrived>(NULL);
  }

  UAArrived* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UAArrived>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UAArrived& from);
  void MergeFrom(const UAArrived& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UAArrived* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 trackingnum = 2;
  bool has_trackingnum() const;
  void clear_trackingnum();
  static const int kTrackingnumFieldNumber = 2;
  ::google::protobuf::int64 trackingnum() const;
  void set_trackingnum(::google::protobuf::int64 value);

  // required int32 truckid = 1;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 1;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // required int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UAArrived)
 private:
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_trackingnum();
  void clear_has_trackingnum();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 trackingnum_;
  ::google::protobuf::int32 truckid_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AULoadOver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AULoadOver) */ {
 public:
  AULoadOver();
  virtual ~AULoadOver();

  AULoadOver(const AULoadOver& from);

  inline AULoadOver& operator=(const AULoadOver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AULoadOver(AULoadOver&& from) noexcept
    : AULoadOver() {
    *this = ::std::move(from);
  }

  inline AULoadOver& operator=(AULoadOver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AULoadOver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AULoadOver* internal_default_instance() {
    return reinterpret_cast<const AULoadOver*>(
               &_AULoadOver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AULoadOver* other);
  friend void swap(AULoadOver& a, AULoadOver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AULoadOver* New() const final {
    return CreateMaybeMessage<AULoadOver>(NULL);
  }

  AULoadOver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AULoadOver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AULoadOver& from);
  void MergeFrom(const AULoadOver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AULoadOver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .UDeliveryLocation loc = 3;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 3;
  private:
  const ::UDeliveryLocation& _internal_loc() const;
  public:
  const ::UDeliveryLocation& loc() const;
  ::UDeliveryLocation* release_loc();
  ::UDeliveryLocation* mutable_loc();
  void set_allocated_loc(::UDeliveryLocation* loc);

  // required int64 trackingnum = 1;
  bool has_trackingnum() const;
  void clear_trackingnum();
  static const int kTrackingnumFieldNumber = 1;
  ::google::protobuf::int64 trackingnum() const;
  void set_trackingnum(::google::protobuf::int64 value);

  // required int32 truckid = 2;
  bool has_truckid() const;
  void clear_truckid();
  static const int kTruckidFieldNumber = 2;
  ::google::protobuf::int32 truckid() const;
  void set_truckid(::google::protobuf::int32 value);

  // required int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AULoadOver)
 private:
  void set_has_trackingnum();
  void clear_has_trackingnum();
  void set_has_truckid();
  void clear_has_truckid();
  void set_has_loc();
  void clear_has_loc();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::UDeliveryLocation* loc_;
  ::google::protobuf::int64 trackingnum_;
  ::google::protobuf::int32 truckid_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UADeliverOver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UADeliverOver) */ {
 public:
  UADeliverOver();
  virtual ~UADeliverOver();

  UADeliverOver(const UADeliverOver& from);

  inline UADeliverOver& operator=(const UADeliverOver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UADeliverOver(UADeliverOver&& from) noexcept
    : UADeliverOver() {
    *this = ::std::move(from);
  }

  inline UADeliverOver& operator=(UADeliverOver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UADeliverOver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UADeliverOver* internal_default_instance() {
    return reinterpret_cast<const UADeliverOver*>(
               &_UADeliverOver_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(UADeliverOver* other);
  friend void swap(UADeliverOver& a, UADeliverOver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UADeliverOver* New() const final {
    return CreateMaybeMessage<UADeliverOver>(NULL);
  }

  UADeliverOver* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UADeliverOver>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UADeliverOver& from);
  void MergeFrom(const UADeliverOver& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UADeliverOver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 trackingnum = 1;
  bool has_trackingnum() const;
  void clear_trackingnum();
  static const int kTrackingnumFieldNumber = 1;
  ::google::protobuf::int64 trackingnum() const;
  void set_trackingnum(::google::protobuf::int64 value);

  // required int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:UADeliverOver)
 private:
  void set_has_trackingnum();
  void clear_has_trackingnum();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 trackingnum_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AUCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AUCommand) */ {
 public:
  AUCommand();
  virtual ~AUCommand();

  AUCommand(const AUCommand& from);

  inline AUCommand& operator=(const AUCommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AUCommand(AUCommand&& from) noexcept
    : AUCommand() {
    *this = ::std::move(from);
  }

  inline AUCommand& operator=(AUCommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AUCommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AUCommand* internal_default_instance() {
    return reinterpret_cast<const AUCommand*>(
               &_AUCommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(AUCommand* other);
  friend void swap(AUCommand& a, AUCommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AUCommand* New() const final {
    return CreateMaybeMessage<AUCommand>(NULL);
  }

  AUCommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AUCommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AUCommand& from);
  void MergeFrom(const AUCommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AUCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .AURequestPickup pickup = 1;
  int pickup_size() const;
  void clear_pickup();
  static const int kPickupFieldNumber = 1;
  ::AURequestPickup* mutable_pickup(int index);
  ::google::protobuf::RepeatedPtrField< ::AURequestPickup >*
      mutable_pickup();
  const ::AURequestPickup& pickup(int index) const;
  ::AURequestPickup* add_pickup();
  const ::google::protobuf::RepeatedPtrField< ::AURequestPickup >&
      pickup() const;

  // repeated .AULoadOver packloaded = 2;
  int packloaded_size() const;
  void clear_packloaded();
  static const int kPackloadedFieldNumber = 2;
  ::AULoadOver* mutable_packloaded(int index);
  ::google::protobuf::RepeatedPtrField< ::AULoadOver >*
      mutable_packloaded();
  const ::AULoadOver& packloaded(int index) const;
  ::AULoadOver* add_packloaded();
  const ::google::protobuf::RepeatedPtrField< ::AULoadOver >&
      packloaded() const;

  // repeated .Err errors = 4;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 4;
  ::Err* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::Err >*
      mutable_errors();
  const ::Err& errors(int index) const;
  ::Err* add_errors();
  const ::google::protobuf::RepeatedPtrField< ::Err >&
      errors() const;

  // repeated int64 acks = 5;
  int acks_size() const;
  void clear_acks();
  static const int kAcksFieldNumber = 5;
  ::google::protobuf::int64 acks(int index) const;
  void set_acks(int index, ::google::protobuf::int64 value);
  void add_acks(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      acks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_acks();

  // optional .AUQueryUpsid queryupsid = 3;
  bool has_queryupsid() const;
  void clear_queryupsid();
  static const int kQueryupsidFieldNumber = 3;
  private:
  const ::AUQueryUpsid& _internal_queryupsid() const;
  public:
  const ::AUQueryUpsid& queryupsid() const;
  ::AUQueryUpsid* release_queryupsid();
  ::AUQueryUpsid* mutable_queryupsid();
  void set_allocated_queryupsid(::AUQueryUpsid* queryupsid);

  // optional int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:AUCommand)
 private:
  void set_has_queryupsid();
  void clear_has_queryupsid();
  void set_has_seqnum();
  void clear_has_seqnum();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::AURequestPickup > pickup_;
  ::google::protobuf::RepeatedPtrField< ::AULoadOver > packloaded_;
  ::google::protobuf::RepeatedPtrField< ::Err > errors_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > acks_;
  ::AUQueryUpsid* queryupsid_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UACommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UACommand) */ {
 public:
  UACommand();
  virtual ~UACommand();

  UACommand(const UACommand& from);

  inline UACommand& operator=(const UACommand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UACommand(UACommand&& from) noexcept
    : UACommand() {
    *this = ::std::move(from);
  }

  inline UACommand& operator=(UACommand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UACommand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UACommand* internal_default_instance() {
    return reinterpret_cast<const UACommand*>(
               &_UACommand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(UACommand* other);
  friend void swap(UACommand& a, UACommand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UACommand* New() const final {
    return CreateMaybeMessage<UACommand>(NULL);
  }

  UACommand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UACommand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UACommand& from);
  void MergeFrom(const UACommand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UACommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .UAArrived arrived = 2;
  int arrived_size() const;
  void clear_arrived();
  static const int kArrivedFieldNumber = 2;
  ::UAArrived* mutable_arrived(int index);
  ::google::protobuf::RepeatedPtrField< ::UAArrived >*
      mutable_arrived();
  const ::UAArrived& arrived(int index) const;
  ::UAArrived* add_arrived();
  const ::google::protobuf::RepeatedPtrField< ::UAArrived >&
      arrived() const;

  // repeated .UADeliverOver deliverover = 3;
  int deliverover_size() const;
  void clear_deliverover();
  static const int kDeliveroverFieldNumber = 3;
  ::UADeliverOver* mutable_deliverover(int index);
  ::google::protobuf::RepeatedPtrField< ::UADeliverOver >*
      mutable_deliverover();
  const ::UADeliverOver& deliverover(int index) const;
  ::UADeliverOver* add_deliverover();
  const ::google::protobuf::RepeatedPtrField< ::UADeliverOver >&
      deliverover() const;

  // repeated .Err errors = 4;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 4;
  ::Err* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField< ::Err >*
      mutable_errors();
  const ::Err& errors(int index) const;
  ::Err* add_errors();
  const ::google::protobuf::RepeatedPtrField< ::Err >&
      errors() const;

  // repeated int64 acks = 5;
  int acks_size() const;
  void clear_acks();
  static const int kAcksFieldNumber = 5;
  ::google::protobuf::int64 acks(int index) const;
  void set_acks(int index, ::google::protobuf::int64 value);
  void add_acks(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      acks() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_acks();

  // optional .UASendWorldId sendid = 1;
  bool has_sendid() const;
  void clear_sendid();
  static const int kSendidFieldNumber = 1;
  private:
  const ::UASendWorldId& _internal_sendid() const;
  public:
  const ::UASendWorldId& sendid() const;
  ::UASendWorldId* release_sendid();
  ::UASendWorldId* mutable_sendid();
  void set_allocated_sendid(::UASendWorldId* sendid);

  // @@protoc_insertion_point(class_scope:UACommand)
 private:
  void set_has_sendid();
  void clear_has_sendid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::UAArrived > arrived_;
  ::google::protobuf::RepeatedPtrField< ::UADeliverOver > deliverover_;
  ::google::protobuf::RepeatedPtrField< ::Err > errors_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > acks_;
  ::UASendWorldId* sendid_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Err : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Err) */ {
 public:
  Err();
  virtual ~Err();

  Err(const Err& from);

  inline Err& operator=(const Err& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Err(Err&& from) noexcept
    : Err() {
    *this = ::std::move(from);
  }

  inline Err& operator=(Err&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Err& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Err* internal_default_instance() {
    return reinterpret_cast<const Err*>(
               &_Err_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(Err* other);
  friend void swap(Err& a, Err& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Err* New() const final {
    return CreateMaybeMessage<Err>(NULL);
  }

  Err* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Err>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Err& from);
  void MergeFrom(const Err& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Err* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string err = 1;
  bool has_err() const;
  void clear_err();
  static const int kErrFieldNumber = 1;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const char* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // required int64 originseqnum = 2;
  bool has_originseqnum() const;
  void clear_originseqnum();
  static const int kOriginseqnumFieldNumber = 2;
  ::google::protobuf::int64 originseqnum() const;
  void set_originseqnum(::google::protobuf::int64 value);

  // required int64 seqnum = 255;
  bool has_seqnum() const;
  void clear_seqnum();
  static const int kSeqnumFieldNumber = 255;
  ::google::protobuf::int64 seqnum() const;
  void set_seqnum(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Err)
 private:
  void set_has_err();
  void clear_has_err();
  void set_has_originseqnum();
  void clear_has_originseqnum();
  void set_has_seqnum();
  void clear_has_seqnum();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::int64 originseqnum_;
  ::google::protobuf::int64 seqnum_;
  friend struct ::protobuf_ups_5famazon_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UASendWorldId

// required int64 worldid = 1;
inline bool UASendWorldId::has_worldid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UASendWorldId::set_has_worldid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UASendWorldId::clear_has_worldid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UASendWorldId::clear_worldid() {
  worldid_ = GOOGLE_LONGLONG(0);
  clear_has_worldid();
}
inline ::google::protobuf::int64 UASendWorldId::worldid() const {
  // @@protoc_insertion_point(field_get:UASendWorldId.worldid)
  return worldid_;
}
inline void UASendWorldId::set_worldid(::google::protobuf::int64 value) {
  set_has_worldid();
  worldid_ = value;
  // @@protoc_insertion_point(field_set:UASendWorldId.worldid)
}

// required int64 seqnum = 255;
inline bool UASendWorldId::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UASendWorldId::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UASendWorldId::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UASendWorldId::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UASendWorldId::seqnum() const {
  // @@protoc_insertion_point(field_get:UASendWorldId.seqnum)
  return seqnum_;
}
inline void UASendWorldId::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UASendWorldId.seqnum)
}

// -------------------------------------------------------------------

// AUQueryUpsid

// required int64 upsid = 1;
inline bool AUQueryUpsid::has_upsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUQueryUpsid::set_has_upsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUQueryUpsid::clear_has_upsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUQueryUpsid::clear_upsid() {
  upsid_ = GOOGLE_LONGLONG(0);
  clear_has_upsid();
}
inline ::google::protobuf::int64 AUQueryUpsid::upsid() const {
  // @@protoc_insertion_point(field_get:AUQueryUpsid.upsid)
  return upsid_;
}
inline void AUQueryUpsid::set_upsid(::google::protobuf::int64 value) {
  set_has_upsid();
  upsid_ = value;
  // @@protoc_insertion_point(field_set:AUQueryUpsid.upsid)
}

// required int64 seqnum = 255;
inline bool AUQueryUpsid::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AUQueryUpsid::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AUQueryUpsid::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AUQueryUpsid::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 AUQueryUpsid::seqnum() const {
  // @@protoc_insertion_point(field_get:AUQueryUpsid.seqnum)
  return seqnum_;
}
inline void AUQueryUpsid::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AUQueryUpsid.seqnum)
}

// -------------------------------------------------------------------

// Warehouse

// required int32 id = 1;
inline bool Warehouse::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Warehouse::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Warehouse::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Warehouse::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Warehouse::id() const {
  // @@protoc_insertion_point(field_get:Warehouse.id)
  return id_;
}
inline void Warehouse::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.id)
}

// required int32 x = 2;
inline bool Warehouse::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Warehouse::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Warehouse::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Warehouse::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 Warehouse::x() const {
  // @@protoc_insertion_point(field_get:Warehouse.x)
  return x_;
}
inline void Warehouse::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.x)
}

// required int32 y = 3;
inline bool Warehouse::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Warehouse::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Warehouse::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Warehouse::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 Warehouse::y() const {
  // @@protoc_insertion_point(field_get:Warehouse.y)
  return y_;
}
inline void Warehouse::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:Warehouse.y)
}

// -------------------------------------------------------------------

// AURequestPickup

// repeated .AProduct things = 1;
inline int AURequestPickup::things_size() const {
  return things_.size();
}
inline ::AProduct* AURequestPickup::mutable_things(int index) {
  // @@protoc_insertion_point(field_mutable:AURequestPickup.things)
  return things_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AProduct >*
AURequestPickup::mutable_things() {
  // @@protoc_insertion_point(field_mutable_list:AURequestPickup.things)
  return &things_;
}
inline const ::AProduct& AURequestPickup::things(int index) const {
  // @@protoc_insertion_point(field_get:AURequestPickup.things)
  return things_.Get(index);
}
inline ::AProduct* AURequestPickup::add_things() {
  // @@protoc_insertion_point(field_add:AURequestPickup.things)
  return things_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AProduct >&
AURequestPickup::things() const {
  // @@protoc_insertion_point(field_list:AURequestPickup.things)
  return things_;
}

// required .Warehouse wareinfo = 2;
inline bool AURequestPickup::has_wareinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AURequestPickup::set_has_wareinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AURequestPickup::clear_has_wareinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AURequestPickup::clear_wareinfo() {
  if (wareinfo_ != NULL) wareinfo_->Clear();
  clear_has_wareinfo();
}
inline const ::Warehouse& AURequestPickup::_internal_wareinfo() const {
  return *wareinfo_;
}
inline const ::Warehouse& AURequestPickup::wareinfo() const {
  const ::Warehouse* p = wareinfo_;
  // @@protoc_insertion_point(field_get:AURequestPickup.wareinfo)
  return p != NULL ? *p : *reinterpret_cast<const ::Warehouse*>(
      &::_Warehouse_default_instance_);
}
inline ::Warehouse* AURequestPickup::release_wareinfo() {
  // @@protoc_insertion_point(field_release:AURequestPickup.wareinfo)
  clear_has_wareinfo();
  ::Warehouse* temp = wareinfo_;
  wareinfo_ = NULL;
  return temp;
}
inline ::Warehouse* AURequestPickup::mutable_wareinfo() {
  set_has_wareinfo();
  if (wareinfo_ == NULL) {
    auto* p = CreateMaybeMessage<::Warehouse>(GetArenaNoVirtual());
    wareinfo_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AURequestPickup.wareinfo)
  return wareinfo_;
}
inline void AURequestPickup::set_allocated_wareinfo(::Warehouse* wareinfo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wareinfo_;
  }
  if (wareinfo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wareinfo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wareinfo, submessage_arena);
    }
    set_has_wareinfo();
  } else {
    clear_has_wareinfo();
  }
  wareinfo_ = wareinfo;
  // @@protoc_insertion_point(field_set_allocated:AURequestPickup.wareinfo)
}

// required int64 trackingnum = 3;
inline bool AURequestPickup::has_trackingnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AURequestPickup::set_has_trackingnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AURequestPickup::clear_has_trackingnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AURequestPickup::clear_trackingnum() {
  trackingnum_ = GOOGLE_LONGLONG(0);
  clear_has_trackingnum();
}
inline ::google::protobuf::int64 AURequestPickup::trackingnum() const {
  // @@protoc_insertion_point(field_get:AURequestPickup.trackingnum)
  return trackingnum_;
}
inline void AURequestPickup::set_trackingnum(::google::protobuf::int64 value) {
  set_has_trackingnum();
  trackingnum_ = value;
  // @@protoc_insertion_point(field_set:AURequestPickup.trackingnum)
}

// optional int64 upsid = 4;
inline bool AURequestPickup::has_upsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AURequestPickup::set_has_upsid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AURequestPickup::clear_has_upsid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AURequestPickup::clear_upsid() {
  upsid_ = GOOGLE_LONGLONG(0);
  clear_has_upsid();
}
inline ::google::protobuf::int64 AURequestPickup::upsid() const {
  // @@protoc_insertion_point(field_get:AURequestPickup.upsid)
  return upsid_;
}
inline void AURequestPickup::set_upsid(::google::protobuf::int64 value) {
  set_has_upsid();
  upsid_ = value;
  // @@protoc_insertion_point(field_set:AURequestPickup.upsid)
}

// required int64 seqnum = 255;
inline bool AURequestPickup::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AURequestPickup::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AURequestPickup::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AURequestPickup::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 AURequestPickup::seqnum() const {
  // @@protoc_insertion_point(field_get:AURequestPickup.seqnum)
  return seqnum_;
}
inline void AURequestPickup::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AURequestPickup.seqnum)
}

// -------------------------------------------------------------------

// UAArrived

// required int32 truckid = 1;
inline bool UAArrived::has_truckid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UAArrived::set_has_truckid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UAArrived::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UAArrived::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 UAArrived::truckid() const {
  // @@protoc_insertion_point(field_get:UAArrived.truckid)
  return truckid_;
}
inline void UAArrived::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:UAArrived.truckid)
}

// required int64 trackingnum = 2;
inline bool UAArrived::has_trackingnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UAArrived::set_has_trackingnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UAArrived::clear_has_trackingnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UAArrived::clear_trackingnum() {
  trackingnum_ = GOOGLE_LONGLONG(0);
  clear_has_trackingnum();
}
inline ::google::protobuf::int64 UAArrived::trackingnum() const {
  // @@protoc_insertion_point(field_get:UAArrived.trackingnum)
  return trackingnum_;
}
inline void UAArrived::set_trackingnum(::google::protobuf::int64 value) {
  set_has_trackingnum();
  trackingnum_ = value;
  // @@protoc_insertion_point(field_set:UAArrived.trackingnum)
}

// required int64 seqnum = 255;
inline bool UAArrived::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UAArrived::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UAArrived::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UAArrived::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UAArrived::seqnum() const {
  // @@protoc_insertion_point(field_get:UAArrived.seqnum)
  return seqnum_;
}
inline void UAArrived::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UAArrived.seqnum)
}

// -------------------------------------------------------------------

// AULoadOver

// required int64 trackingnum = 1;
inline bool AULoadOver::has_trackingnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AULoadOver::set_has_trackingnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AULoadOver::clear_has_trackingnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AULoadOver::clear_trackingnum() {
  trackingnum_ = GOOGLE_LONGLONG(0);
  clear_has_trackingnum();
}
inline ::google::protobuf::int64 AULoadOver::trackingnum() const {
  // @@protoc_insertion_point(field_get:AULoadOver.trackingnum)
  return trackingnum_;
}
inline void AULoadOver::set_trackingnum(::google::protobuf::int64 value) {
  set_has_trackingnum();
  trackingnum_ = value;
  // @@protoc_insertion_point(field_set:AULoadOver.trackingnum)
}

// required int32 truckid = 2;
inline bool AULoadOver::has_truckid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AULoadOver::set_has_truckid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AULoadOver::clear_has_truckid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AULoadOver::clear_truckid() {
  truckid_ = 0;
  clear_has_truckid();
}
inline ::google::protobuf::int32 AULoadOver::truckid() const {
  // @@protoc_insertion_point(field_get:AULoadOver.truckid)
  return truckid_;
}
inline void AULoadOver::set_truckid(::google::protobuf::int32 value) {
  set_has_truckid();
  truckid_ = value;
  // @@protoc_insertion_point(field_set:AULoadOver.truckid)
}

// required .UDeliveryLocation loc = 3;
inline bool AULoadOver::has_loc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AULoadOver::set_has_loc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AULoadOver::clear_has_loc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::UDeliveryLocation& AULoadOver::_internal_loc() const {
  return *loc_;
}
inline const ::UDeliveryLocation& AULoadOver::loc() const {
  const ::UDeliveryLocation* p = loc_;
  // @@protoc_insertion_point(field_get:AULoadOver.loc)
  return p != NULL ? *p : *reinterpret_cast<const ::UDeliveryLocation*>(
      &::_UDeliveryLocation_default_instance_);
}
inline ::UDeliveryLocation* AULoadOver::release_loc() {
  // @@protoc_insertion_point(field_release:AULoadOver.loc)
  clear_has_loc();
  ::UDeliveryLocation* temp = loc_;
  loc_ = NULL;
  return temp;
}
inline ::UDeliveryLocation* AULoadOver::mutable_loc() {
  set_has_loc();
  if (loc_ == NULL) {
    auto* p = CreateMaybeMessage<::UDeliveryLocation>(GetArenaNoVirtual());
    loc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AULoadOver.loc)
  return loc_;
}
inline void AULoadOver::set_allocated_loc(::UDeliveryLocation* loc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(loc_);
  }
  if (loc) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc, submessage_arena);
    }
    set_has_loc();
  } else {
    clear_has_loc();
  }
  loc_ = loc;
  // @@protoc_insertion_point(field_set_allocated:AULoadOver.loc)
}

// required int64 seqnum = 255;
inline bool AULoadOver::has_seqnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AULoadOver::set_has_seqnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AULoadOver::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AULoadOver::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 AULoadOver::seqnum() const {
  // @@protoc_insertion_point(field_get:AULoadOver.seqnum)
  return seqnum_;
}
inline void AULoadOver::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AULoadOver.seqnum)
}

// -------------------------------------------------------------------

// UADeliverOver

// required int64 trackingnum = 1;
inline bool UADeliverOver::has_trackingnum() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UADeliverOver::set_has_trackingnum() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UADeliverOver::clear_has_trackingnum() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UADeliverOver::clear_trackingnum() {
  trackingnum_ = GOOGLE_LONGLONG(0);
  clear_has_trackingnum();
}
inline ::google::protobuf::int64 UADeliverOver::trackingnum() const {
  // @@protoc_insertion_point(field_get:UADeliverOver.trackingnum)
  return trackingnum_;
}
inline void UADeliverOver::set_trackingnum(::google::protobuf::int64 value) {
  set_has_trackingnum();
  trackingnum_ = value;
  // @@protoc_insertion_point(field_set:UADeliverOver.trackingnum)
}

// required int64 seqnum = 255;
inline bool UADeliverOver::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UADeliverOver::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UADeliverOver::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UADeliverOver::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 UADeliverOver::seqnum() const {
  // @@protoc_insertion_point(field_get:UADeliverOver.seqnum)
  return seqnum_;
}
inline void UADeliverOver::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:UADeliverOver.seqnum)
}

// -------------------------------------------------------------------

// AUCommand

// repeated .AURequestPickup pickup = 1;
inline int AUCommand::pickup_size() const {
  return pickup_.size();
}
inline void AUCommand::clear_pickup() {
  pickup_.Clear();
}
inline ::AURequestPickup* AUCommand::mutable_pickup(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommand.pickup)
  return pickup_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AURequestPickup >*
AUCommand::mutable_pickup() {
  // @@protoc_insertion_point(field_mutable_list:AUCommand.pickup)
  return &pickup_;
}
inline const ::AURequestPickup& AUCommand::pickup(int index) const {
  // @@protoc_insertion_point(field_get:AUCommand.pickup)
  return pickup_.Get(index);
}
inline ::AURequestPickup* AUCommand::add_pickup() {
  // @@protoc_insertion_point(field_add:AUCommand.pickup)
  return pickup_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AURequestPickup >&
AUCommand::pickup() const {
  // @@protoc_insertion_point(field_list:AUCommand.pickup)
  return pickup_;
}

// repeated .AULoadOver packloaded = 2;
inline int AUCommand::packloaded_size() const {
  return packloaded_.size();
}
inline void AUCommand::clear_packloaded() {
  packloaded_.Clear();
}
inline ::AULoadOver* AUCommand::mutable_packloaded(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommand.packloaded)
  return packloaded_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::AULoadOver >*
AUCommand::mutable_packloaded() {
  // @@protoc_insertion_point(field_mutable_list:AUCommand.packloaded)
  return &packloaded_;
}
inline const ::AULoadOver& AUCommand::packloaded(int index) const {
  // @@protoc_insertion_point(field_get:AUCommand.packloaded)
  return packloaded_.Get(index);
}
inline ::AULoadOver* AUCommand::add_packloaded() {
  // @@protoc_insertion_point(field_add:AUCommand.packloaded)
  return packloaded_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::AULoadOver >&
AUCommand::packloaded() const {
  // @@protoc_insertion_point(field_list:AUCommand.packloaded)
  return packloaded_;
}

// optional .AUQueryUpsid queryupsid = 3;
inline bool AUCommand::has_queryupsid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AUCommand::set_has_queryupsid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AUCommand::clear_has_queryupsid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AUCommand::clear_queryupsid() {
  if (queryupsid_ != NULL) queryupsid_->Clear();
  clear_has_queryupsid();
}
inline const ::AUQueryUpsid& AUCommand::_internal_queryupsid() const {
  return *queryupsid_;
}
inline const ::AUQueryUpsid& AUCommand::queryupsid() const {
  const ::AUQueryUpsid* p = queryupsid_;
  // @@protoc_insertion_point(field_get:AUCommand.queryupsid)
  return p != NULL ? *p : *reinterpret_cast<const ::AUQueryUpsid*>(
      &::_AUQueryUpsid_default_instance_);
}
inline ::AUQueryUpsid* AUCommand::release_queryupsid() {
  // @@protoc_insertion_point(field_release:AUCommand.queryupsid)
  clear_has_queryupsid();
  ::AUQueryUpsid* temp = queryupsid_;
  queryupsid_ = NULL;
  return temp;
}
inline ::AUQueryUpsid* AUCommand::mutable_queryupsid() {
  set_has_queryupsid();
  if (queryupsid_ == NULL) {
    auto* p = CreateMaybeMessage<::AUQueryUpsid>(GetArenaNoVirtual());
    queryupsid_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AUCommand.queryupsid)
  return queryupsid_;
}
inline void AUCommand::set_allocated_queryupsid(::AUQueryUpsid* queryupsid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete queryupsid_;
  }
  if (queryupsid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      queryupsid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, queryupsid, submessage_arena);
    }
    set_has_queryupsid();
  } else {
    clear_has_queryupsid();
  }
  queryupsid_ = queryupsid;
  // @@protoc_insertion_point(field_set_allocated:AUCommand.queryupsid)
}

// repeated .Err errors = 4;
inline int AUCommand::errors_size() const {
  return errors_.size();
}
inline void AUCommand::clear_errors() {
  errors_.Clear();
}
inline ::Err* AUCommand::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:AUCommand.errors)
  return errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Err >*
AUCommand::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:AUCommand.errors)
  return &errors_;
}
inline const ::Err& AUCommand::errors(int index) const {
  // @@protoc_insertion_point(field_get:AUCommand.errors)
  return errors_.Get(index);
}
inline ::Err* AUCommand::add_errors() {
  // @@protoc_insertion_point(field_add:AUCommand.errors)
  return errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Err >&
AUCommand::errors() const {
  // @@protoc_insertion_point(field_list:AUCommand.errors)
  return errors_;
}

// repeated int64 acks = 5;
inline int AUCommand::acks_size() const {
  return acks_.size();
}
inline void AUCommand::clear_acks() {
  acks_.Clear();
}
inline ::google::protobuf::int64 AUCommand::acks(int index) const {
  // @@protoc_insertion_point(field_get:AUCommand.acks)
  return acks_.Get(index);
}
inline void AUCommand::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:AUCommand.acks)
}
inline void AUCommand::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:AUCommand.acks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AUCommand::acks() const {
  // @@protoc_insertion_point(field_list:AUCommand.acks)
  return acks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AUCommand::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:AUCommand.acks)
  return &acks_;
}

// optional int64 seqnum = 255;
inline bool AUCommand::has_seqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AUCommand::set_has_seqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AUCommand::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AUCommand::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 AUCommand::seqnum() const {
  // @@protoc_insertion_point(field_get:AUCommand.seqnum)
  return seqnum_;
}
inline void AUCommand::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:AUCommand.seqnum)
}

// -------------------------------------------------------------------

// UACommand

// optional .UASendWorldId sendid = 1;
inline bool UACommand::has_sendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UACommand::set_has_sendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UACommand::clear_has_sendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UACommand::clear_sendid() {
  if (sendid_ != NULL) sendid_->Clear();
  clear_has_sendid();
}
inline const ::UASendWorldId& UACommand::_internal_sendid() const {
  return *sendid_;
}
inline const ::UASendWorldId& UACommand::sendid() const {
  const ::UASendWorldId* p = sendid_;
  // @@protoc_insertion_point(field_get:UACommand.sendid)
  return p != NULL ? *p : *reinterpret_cast<const ::UASendWorldId*>(
      &::_UASendWorldId_default_instance_);
}
inline ::UASendWorldId* UACommand::release_sendid() {
  // @@protoc_insertion_point(field_release:UACommand.sendid)
  clear_has_sendid();
  ::UASendWorldId* temp = sendid_;
  sendid_ = NULL;
  return temp;
}
inline ::UASendWorldId* UACommand::mutable_sendid() {
  set_has_sendid();
  if (sendid_ == NULL) {
    auto* p = CreateMaybeMessage<::UASendWorldId>(GetArenaNoVirtual());
    sendid_ = p;
  }
  // @@protoc_insertion_point(field_mutable:UACommand.sendid)
  return sendid_;
}
inline void UACommand::set_allocated_sendid(::UASendWorldId* sendid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete sendid_;
  }
  if (sendid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      sendid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sendid, submessage_arena);
    }
    set_has_sendid();
  } else {
    clear_has_sendid();
  }
  sendid_ = sendid;
  // @@protoc_insertion_point(field_set_allocated:UACommand.sendid)
}

// repeated .UAArrived arrived = 2;
inline int UACommand::arrived_size() const {
  return arrived_.size();
}
inline void UACommand::clear_arrived() {
  arrived_.Clear();
}
inline ::UAArrived* UACommand::mutable_arrived(int index) {
  // @@protoc_insertion_point(field_mutable:UACommand.arrived)
  return arrived_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UAArrived >*
UACommand::mutable_arrived() {
  // @@protoc_insertion_point(field_mutable_list:UACommand.arrived)
  return &arrived_;
}
inline const ::UAArrived& UACommand::arrived(int index) const {
  // @@protoc_insertion_point(field_get:UACommand.arrived)
  return arrived_.Get(index);
}
inline ::UAArrived* UACommand::add_arrived() {
  // @@protoc_insertion_point(field_add:UACommand.arrived)
  return arrived_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UAArrived >&
UACommand::arrived() const {
  // @@protoc_insertion_point(field_list:UACommand.arrived)
  return arrived_;
}

// repeated .UADeliverOver deliverover = 3;
inline int UACommand::deliverover_size() const {
  return deliverover_.size();
}
inline void UACommand::clear_deliverover() {
  deliverover_.Clear();
}
inline ::UADeliverOver* UACommand::mutable_deliverover(int index) {
  // @@protoc_insertion_point(field_mutable:UACommand.deliverover)
  return deliverover_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::UADeliverOver >*
UACommand::mutable_deliverover() {
  // @@protoc_insertion_point(field_mutable_list:UACommand.deliverover)
  return &deliverover_;
}
inline const ::UADeliverOver& UACommand::deliverover(int index) const {
  // @@protoc_insertion_point(field_get:UACommand.deliverover)
  return deliverover_.Get(index);
}
inline ::UADeliverOver* UACommand::add_deliverover() {
  // @@protoc_insertion_point(field_add:UACommand.deliverover)
  return deliverover_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::UADeliverOver >&
UACommand::deliverover() const {
  // @@protoc_insertion_point(field_list:UACommand.deliverover)
  return deliverover_;
}

// repeated .Err errors = 4;
inline int UACommand::errors_size() const {
  return errors_.size();
}
inline void UACommand::clear_errors() {
  errors_.Clear();
}
inline ::Err* UACommand::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:UACommand.errors)
  return errors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Err >*
UACommand::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:UACommand.errors)
  return &errors_;
}
inline const ::Err& UACommand::errors(int index) const {
  // @@protoc_insertion_point(field_get:UACommand.errors)
  return errors_.Get(index);
}
inline ::Err* UACommand::add_errors() {
  // @@protoc_insertion_point(field_add:UACommand.errors)
  return errors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Err >&
UACommand::errors() const {
  // @@protoc_insertion_point(field_list:UACommand.errors)
  return errors_;
}

// repeated int64 acks = 5;
inline int UACommand::acks_size() const {
  return acks_.size();
}
inline void UACommand::clear_acks() {
  acks_.Clear();
}
inline ::google::protobuf::int64 UACommand::acks(int index) const {
  // @@protoc_insertion_point(field_get:UACommand.acks)
  return acks_.Get(index);
}
inline void UACommand::set_acks(int index, ::google::protobuf::int64 value) {
  acks_.Set(index, value);
  // @@protoc_insertion_point(field_set:UACommand.acks)
}
inline void UACommand::add_acks(::google::protobuf::int64 value) {
  acks_.Add(value);
  // @@protoc_insertion_point(field_add:UACommand.acks)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
UACommand::acks() const {
  // @@protoc_insertion_point(field_list:UACommand.acks)
  return acks_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
UACommand::mutable_acks() {
  // @@protoc_insertion_point(field_mutable_list:UACommand.acks)
  return &acks_;
}

// -------------------------------------------------------------------

// Err

// required string err = 1;
inline bool Err::has_err() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Err::set_has_err() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Err::clear_has_err() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Err::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_err();
}
inline const ::std::string& Err::err() const {
  // @@protoc_insertion_point(field_get:Err.err)
  return err_.GetNoArena();
}
inline void Err::set_err(const ::std::string& value) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Err.err)
}
#if LANG_CXX11
inline void Err::set_err(::std::string&& value) {
  set_has_err();
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Err.err)
}
#endif
inline void Err::set_err(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Err.err)
}
inline void Err::set_err(const char* value, size_t size) {
  set_has_err();
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Err.err)
}
inline ::std::string* Err::mutable_err() {
  set_has_err();
  // @@protoc_insertion_point(field_mutable:Err.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Err::release_err() {
  // @@protoc_insertion_point(field_release:Err.err)
  if (!has_err()) {
    return NULL;
  }
  clear_has_err();
  return err_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Err::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    set_has_err();
  } else {
    clear_has_err();
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:Err.err)
}

// required int64 originseqnum = 2;
inline bool Err::has_originseqnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Err::set_has_originseqnum() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Err::clear_has_originseqnum() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Err::clear_originseqnum() {
  originseqnum_ = GOOGLE_LONGLONG(0);
  clear_has_originseqnum();
}
inline ::google::protobuf::int64 Err::originseqnum() const {
  // @@protoc_insertion_point(field_get:Err.originseqnum)
  return originseqnum_;
}
inline void Err::set_originseqnum(::google::protobuf::int64 value) {
  set_has_originseqnum();
  originseqnum_ = value;
  // @@protoc_insertion_point(field_set:Err.originseqnum)
}

// required int64 seqnum = 255;
inline bool Err::has_seqnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Err::set_has_seqnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Err::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Err::clear_seqnum() {
  seqnum_ = GOOGLE_LONGLONG(0);
  clear_has_seqnum();
}
inline ::google::protobuf::int64 Err::seqnum() const {
  // @@protoc_insertion_point(field_get:Err.seqnum)
  return seqnum_;
}
inline void Err::set_seqnum(::google::protobuf::int64 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:Err.seqnum)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_ups_5famazon_2eproto
